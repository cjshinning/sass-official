@import './foo.scss';
@import './colors.scss';

#main1 p {
    color: #00ff00;
    width: 97%;

    .redbox {
        background: #f00;
        color: #000;
    }
}

#main2 {
    color: #000;

    a {
        font-weight: bold;

        &:hover {
            color: #f00;
        }
    }
}

.funky {
    font: {
        family: fantasy;
        size: 3em;
        weight: bold;
    }
}

/* This comment is
 * several lines long.
 * since it uses the CSS comment syntax,
 * it will appear in the CSS output. */
// body {
//     color: black;
// }

// These comments are only one line long each.
// They won't appear in the CSS output,
// since they use the single-line comment syntax.
// a {
//     color: green;
// }

$width1: 25em;

#main3 {
    width: $width1;
    margin: 0 auto;
}

#main4 {
    $width2: 25em !global;
    width: $width2;
    margin: 0 auto;
}

#sidebar {
    width: $width2;
}

@mixin message($selector) {
    body #{$selector}:before {
        content: 'Hi, Firefox users!';
    }
}

@include message('.header');

#main5 {

    p {
        width: 1in+8pt;
    }
}

#main6 {
    p {
        // font: 10px/8px;
        $width3: 1000px;
        width: $width3/2;
        margin: 0 auto;
        $font-size: 12px;
        $line-height: 30px;
        font: #{$font-size}/#{$line-height};
    }
}

#main7 {
    p:before {
        content: "I ate #{5+10} pies!";
        font-family: sans- + "serif";
        margin: 3px+4px auto;
    }
}

#main8 {
    p {
        width: 1em+(2em*3);
    }
}

#main9 {
    $name: foo;
    $attr: border;

    p.#{$name} {
        #{$attr}-color: blue;
    }
}

#main10 {
    p {
        width: 300px;

        @media screen and (orientation: landscape) {
            width: 500px;
        }
    }
}

#main11 {
    .error {
        border: 1px solid #f00;
        background-color: #fdd;
    }

    .seriousError {
        @extend .error;
        border-width: 3px;
    }
}

#main12 p {
    @if 1+1==2 {
        border: 1px solid;
    }

    @if(5<3) {
        border: 2px dotted;
    }

    @if(null) {
        border: 3px double;
    }
}

#main13 {
    $type: monster;

    p {
        @if $type ==ocean {
            color: blue;
        }

        @else if $type ==monster {
            color: green;
        }

        @else {
            color: black;
        }

    }
}

#main14 {
    @for $i from 1 through 3 {
        .item-#{$i} {
            width: 15em*$i;
            text-align: left;
        }
    }
}

#main15 {

    @each $animal in puma,
    sea-slug,
    egret,
    salamander {
        .#{$animal}-icon {
            // background-image: url(./images/#{$animal}.png);
            background: #000;
        }
    }
}

#main16 {
    $i: 6;

    @while $i >0 {
        .item-#{$i} {
            width: 2em * $i;
        }

        $i: $i - 2;
    }
}

@mixin large-text {
    font: {
        family: Arial;
        size: 20px;
        weight: bold;
    }

    color: #f00;
}

@mixin clearfix {
    display: inline-block;

    &:after {
        content: '.';
        display: block;
        height: 0;
        clear: both;
        visibility: hidden;
    }

}

.page-title {
    @include large-text;
    padding: 4px;
    margin-top: 10px;
}

@mixin sexy-border($color, $width: 1in) {
    border: {
        color: $color;
        width: $width;
        style: dashed;
    }
}

#main17 {
    p {
        // @include sexy-border(blue, 1in);
        @include sexy-border($color: blue);
    }

    h4 {
        // @include sexy-border(blue, 2in);
        @include sexy-border($color: blue, $width: 2in);
    }
}

@mixin box-shadow($shadows...) {
    -moz-box-shadow: $shadows;
    -webkit-box-shadow: $shadows;
    box-shadow: $shadows;
}

.shadows {
    @include box-shadow(0px 4px 5px #666, 2px 6px 10px #999);
}

$grid-width: 40px;
$gutter-width: 10px;

@function grid-width($n) {
    @return $n * $grid-width +($n - 1) * $gutter-width;
}

#main18 {
    p {
        width: grid-width(5);
    }
}